<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microservices on Nico Westerbeck</title>
    <link>https://nico-westerbeck.de/tags/microservices/</link>
    <description>Recent content in Microservices on Nico Westerbeck</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 15 Nov 2016 17:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nico-westerbeck.de/tags/microservices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting up a docker-compose environment for the OMS</title>
      <link>https://nico-westerbeck.de/blog/docker-compose/</link>
      <pubDate>Tue, 15 Nov 2016 17:00:00 +0000</pubDate>
      
      <guid>https://nico-westerbeck.de/blog/docker-compose/</guid>
      <description>Introduction At first I used this file only as a help for myself, but I thought I could also share my thoughts. The project was to set up a docker environment for a microservice architecture consisting of the following parts. This was specifically done for the OMS
 OMS-Core, consisting of  nginx php-fpm A workspace container with php artisan, composer, etc postgres A data container for the whole repo  OMS-Events, consisting of  node.</description>
    </item>
    
    <item>
      <title>Notification pipelines</title>
      <link>https://nico-westerbeck.de/blog/notification-pipeline/</link>
      <pubDate>Mon, 10 Oct 2016 20:00:00 +0000</pubDate>
      
      <guid>https://nico-westerbeck.de/blog/notification-pipeline/</guid>
      <description>Introduction In this post I will share some thoughts upon implementing a notification pipeline in a microservice architecture. It should be said though that I don&amp;rsquo;t yet have much practical experiences, this post is rather designed as a discussion about the topic. While working on the OMS for AEGEE, I found that this topic is actually quite a tough point when developing a distributed application.
 A lot of microservices will want to generate notifications for different things, resulting in a high number of notifications and a high diversity Users want to control how and which notifications they want Notifications need to be managed centrally, as it would get inconsistend having the notification settings everywhere Certain events could potentially trigger a high notification throughput (a huge event gets canceled, popular news post) There are several channels how notifications can be distributed: Mail, Pop-up notification, Push-notifications, Chat integration, &amp;hellip;  The good thing is that this topic is not necessarily time-critical.</description>
    </item>
    
  </channel>
</rss>